// This file was generated from a template. Edit it to match your keyboard.
// See https://zmk.dev/docs/development/hardware-integration/new-shield for more instructions.

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/reset.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        mtl: mod_tap_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };

        mtr: mod_tap_right {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };

        hypr: hyper_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HYPER_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ┌────┬────┬────┬────┬─────┐   ┌────┬────┬────┬────┬─────┐
            // │   Q   │   W   │   F   │   P   │   B   │   │   J   │   L   │   U   │   Y   │   ;   │
            // ├────┼────┼────┼────┼─────┤   ├────┼────┼────┼────┼─────┤
            // │   A   │   R   │   S   │   T   │   G   │   │   M   │   N   │   E   │   I   │   O   │
            // ├────┼────┼────┼────┼─────┤   ├────┼────┼────┼────┼─────┤
            // │   Z   │   X   │   C   │   D   │   V   │   │   K   │   H   │   ,   │   .   │   /   │
            // └────┴────┴────┴────┴─────┘   └────┴────┴────┴────┴─────┘
            //                            ┌────┬────┐   ┌────┬─────┐
            //                            │ ESC  │  SPC  │   │  BSPC │  ENT   │
            //                            └────┴────┘   └────┴─────┘

            bindings = <
                &kp Q                    &mtl LCTRL W   &mtl LALT F    &kp P         &kp B         &kp J       &kp L         &mtr RALT U      &mtr RCTRL Y     &kp SQT
                &mtl LSHFT A             &mtl LSHFT S     &lt 2 T       &kp G         &kp M       &lt 5 N       &lt 6 E          &lt 7 I          &mtr RSHFT O
                &hypr LS(LC(LA(LGUI))) Z &kp X &kp C      &kp D         &kp V         &kp K       &kp H         &kp COMMA        &kp DOT          &lt 1 SEMI
                                           &mtl LGUI TAB  &lt 1 SPACE       &lt 1 BSPC  &mtr RGUI RET
            >;
        };
        bootloader_layer {
            bindings = <
                &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &none    &none    &none    &none     &none
                &bt BT_CLR   &none        &none        &none        &none           &none    &none    &none    &none     &none
                &sys_reset   &soft_off    &none        &none        &none           &none    &none    &none    &soft_off &sys_reset
                                          &trans       &bootloader       &bootloader &trans
            >;
        };

        nav_layer {
            bindings = <
                &none       &none      &none       &none      &none        &none       &kp PG_UP  &kp UP     &kp HOME   &none
                &none       &none      &none       &trans     &none        &caps_word  &kp LEFT   &kp DOWN   &kp RIGHT  &none
                &none       &none      &none       &none      &none        &none       &kp PG_DN  &kp LG(LS(X)) &kp END &none
                                       &none       &kp ESC        &kp DEL   &trans
            >;
        };
    };
};
